{
  "name": "get-translation",
  "description": "Effective translation workflow",
  "version": "0.8.0",
  "homepage": "https://github.com/tinganho/get-translation",
  "author": {
    "name": "Tingan Ho",
    "email": "tingan87@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tinganho/grunt-translate.git"
  },
  "bugs": {
    "url": "https://github.com/tinganho/grunt-translate/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tinganho/grunt-translate/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "bin": {
    "gtt": "./binaries/gt"
  },
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "binaries/test && grunt mocha:test"
  },
  "dependencies": {
    "grunt": "~0.4.2",
    "amdefine": "^0.1.0",
    "express": "~3.1.2",
    "findup-sync": "~0.1.1",
    "open": "0.0.3",
    "grunt-contrib-connect": "~0.2.0",
    "connect-modrewrite": "^0.6.0",
    "autoroute": "~0.2.1",
    "lunr": "~0.4.3",
    "requirejs": "~2.1.10",
    "prompt": "~0.2.12",
    "commander": "~2.0.0",
    "underscore": "~1.5.2",
    "glob": "~3.2.8",
    "hashids": "~0.1.4",
    "terminal-colors": "~0.1.3",
    "grunt-contrib-requirejs": "~0.4.1",
    "proxyquire": "~0.5.2",
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-compass": "~0.1.3",
    "grunt-contrib-watch": "~0.1.4",
    "grunt-webp": "https://github.com/tinganho/grunt-webp/tarball/master",
    "mocha": "~1.8.2",
    "q": "~1.0.0",
    "sinon": "~1.8.2",
    "helmet": "~0.1.2",
    "backbone": "~1.1.2",
    "superagent": "~0.17.0",
    "grunt-contrib-clean": "~0.5.0",
    "backbone-relational": "~0.8.6",
    "mkdirp": "~0.5.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.0",
    "mocha": "~1.8.1",
    "grunt-contrib-compass": "~0.1.0",
    "grunt-contrib-watch": "~0.1.4",
    "grunt-contrib-requirejs": "~0.4.0",
    "proxyquire": "~0.5.1",
    "jshint-globals": "~0.1.0",
    "sinon-chai": "~2.5.0",
    "chai-as-promised": "~4.1.0",
    "chai": "~1.8.1",
    "grunt-dot-compiler": "~0.5.12",
    "grunt-modernizr": "~0.5.1",
    "grunt-mocha": "~0.4.10",
    "connect-modrewrite": "~0.7.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "contributors": [
    {
      "name": "Tingan Ho",
      "email": "tingan87@gmail.com"
    }
  ],
  "readme": "(WIP) get-translation [![Build Status](https://travis-ci.org/tinganho/get-translation.png)](https://travis-ci.org/tinganho/get-translation)\n==============\nEffective translation workflow. \n\n* Updated translation keys from source.\n* Intuitive web translation interface.\n* Translate every translation problem you can think of.\n* CLI tool for updating and translating.\n* Support for multiple programming languages.\n\n----\n\n## Today's translation problems\nThere is a lot of problem involved with translating an application today. Regardless of which languague it is written in. The main problems are maintenance, inefficent workflow and inability to translate complex translations.\n\nExamples:\n\n* A key got deleted from source. You have to yourself delete the key in all your localization files.\n* If a translation key got added to source. You have to youself add the key to all you localization files.\n* Translators often need to contact developers for translation.\n* Trouble to translate gender context. E.g. `You gave him 5 coins`\n* Trouble to translate multiple translation forms. Some languages don't just have singular and plural they have more than 2 plural forms.\n* Translators need to learn complex language syntax to solve complex translations. E.g. ICU.\n* Check this slides for more problems: https://docs.google.com/presentation/d/1ZyN8-0VXmod5hbHveq-M1AeQ61Ga3BmVuahZjbmbBxo/pub?start=false&loop=false&delayms=3000#slide=id.g1bc43a82_2_14\n\n## Getting started\n\nInstall get-translation `npm install get-translation -g`\n\nCreate a new project folder `test` and initialize a new translation project. The initialization guide will guide you through creating a project.\n```\n$ mkdir test\n$ cd test\n$ gt init\n```\nNow, create a source file `test.js` with (at least) the following code:\n``` javascript\nvar firstnameLabel = gt('FIRSTNAME')\n  , lastnameLabel = gt('LASTNAME')\n  // Pass in variables\n  , age = 7\n  , yourAgeIsLabel = gt('YOUR_AGE_IS', { age : age });\n  // Pass in multiple variables\n  , cats = 2\n  , dogs = 3\n  , catsAndDogsLabel = gt('YOU_HAVE_NUMBER_OF_CATS_AND_DOGS', { cats : cats, dogs : dogs});\n```\nNow, lets update translation keys from source:\n```\n$ gt update\n```\nLets check which translation keys have been added:\n```\n$ gt log\n%1 FIRSTNAME | NO TRANSLATION\n%2 LASTNAME | NO TRANSLATION\n%3 YOUR_AGE | NO TRANSLATION\n%4 YOU_HAVE_NUMBER_OF_CATS_AND_DOGS | NO TRANSLATION\n```\nEdit the last translation using `log reference`:\n```\n$ gt edit %1 \"Firstname\" # using default langague\n$ gt edit %1 --locale=zh \"Âêç\" # using chinese\n```\nTranslation are now saved to a localization file. To compile to your source programming language:\n```\n$ gt compile\n```\nLets set up a web interface for translator to use:\n```\n$ gt interface\n```\n![Imgur](http://i.imgur.com/nsWPunD.jpg)\n\n## License\nCopyright (c) 2014 Tingan Ho\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "get-translation@0.8.0",
  "dist": {
    "shasum": "d3c094e934c4ac540aa1e489f27bc7061c8076ff"
  },
  "_from": "get-translation@",
  "_resolved": "https://registry.npmjs.org/get-translation/-/get-translation-0.8.0.tgz"
}
